lowLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Water*Age, data=low, SS.type="III", print.progress=F) ; summary(lowLM)
View(low)
levels(low)
levels.data.frame(low)
levels(low$Age)
levels(low$Fungus)
levels(low$Water)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Old + Young Chlorophyll/"
chldata <- read.csv(paste(path, "chlorophyll_data.csv", sep=""), header = T, row.names = 1)
# create a total chlorophyll column (a + b)
chldata$Total <- chldata$Chl.a + chldata$Chl.b
high <- chldata %>% filter(Water=="High") %>% droplevels.data.frame()
low <- chldata %>% filter(Water=="Low") %>% droplevels.data.frame()
# chl b/a ratio
highLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=high, SS.type="III", print.progress=F) ; summary(highLM)
coef(highLM, test = T)
lowLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=low, SS.type="III", print.progress=F) ; summary(lowLM)
coef(lowLM, test = T)
highANOVA <- anova(ctrlLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(highANOVA)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Old + Young Chlorophyll/"
chldata <- read.csv(paste(path, "chlorophyll_data.csv", sep=""), header = T, row.names = 1)
# create a total chlorophyll column (a + b)
chldata$Total <- chldata$Chl.a + chldata$Chl.b
high <- chldata %>% filter(Water=="High") %>% droplevels.data.frame()
low <- chldata %>% filter(Water=="Low") %>% droplevels.data.frame()
# chl b/a ratio
highLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=high, SS.type="III", print.progress=F) ; summary(highLM)
coef(highLM, test = T)
lowLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=low, SS.type="III", print.progress=F) ; summary(lowLM)
coef(lowLM, test = T)
highANOVA <- anova(highLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(highANOVA)
lowANOVA <- anova(lowLM, effect.type = "F", error = c("Residuals", "Block:Water", "Block:Water:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(lowANOVA)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Old + Young Chlorophyll/"
chldata <- read.csv(paste(path, "chlorophyll_data.csv", sep=""), header = T, row.names = 1)
# create a total chlorophyll column (a + b)
chldata$Total <- chldata$Chl.a + chldata$Chl.b
high <- chldata %>% filter(Water=="High") %>% droplevels.data.frame()
low <- chldata %>% filter(Water=="Low") %>% droplevels.data.frame()
# chl b/a ratio linear models and coefficient tests
highLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=high, SS.type="III", print.progress=F) ; summary(highLM)
coef(highLM, test = T)
lowLM <- lm.rrpp(Chl.b.a.ratio ~ Block*Fungus*Age, data=low, SS.type="III", print.progress=F) ; summary(lowLM)
coef(lowLM, test = T)
# chl b/a ratio anovas
highANOVA <- anova(highLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(highANOVA)
lowANOVA <- anova(lowLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(lowANOVA)
lowANOVA <- anova(lowLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(lowANOVA)
# chl b/a ratio anovas
highANOVA <- anova(highLM, effect.type = "F", error = c("Residuals", "Block:Fungus", "Block:Fungus:Age", "Residuals", "Block:Fungus:Age", "Block:Fungus:Age", "Residuals")) ; summary(highANOVA)
highpw <- pairwise(highLM, groups = interaction(high$Fungus, high$Age)) ; summary(highpw, confidence = 0.95, stat.table = T)
lowpw <- pairwise(lowLM, groups = interaction(low$Fungus, low$Age)) ; summary(lowpw, confidence = 0.95, stat.table = T)
lowpw <- pairwise(lowLM, groups = low$Fungus) ; summary(lowpw, confidence = 0.95, stat.table = T)
highpw <- pairwise(highLM, groups = high$Fungus) ; summary(highpw, confidence = 0.95, stat.table = T)
highpw <- pairwise(highLM, groups = high$Fungus) ; summary(highpw, confidence = 0.95, stat.table = T)
highpw2 <- pairwise(highLM, groups = high$Age) ; summary(highpw2, confidence = 0.95, stat.table = T)
lowpw <- pairwise(lowLM, groups = low$Fungus) ; summary(lowpw, confidence = 0.95, stat.table = T)
lowpw2 <- pairwise(lowLM, groups = low$Age) ; summary(lowpw2, confidence = 0.95, stat.table = T)
# residuals vs fitted values (homoscedasticity check)
hdiagnostics <- plot(highLM, type = "diagnostics")
# linear regression plot
hregression <- plot(highLM, type = "regression", predictor = class$Fungus, reg.type = "RegScore")
# residuals vs fitted values (homoscedasticity check)
hdiagnostics <- plot(highLM, type = "diagnostics")
# linear regression plot
hregression <- plot(highLM, type = "regression", predictor = high$Fungus, reg.type = "RegScore")
View(high)
# residuals vs fitted values (homoscedasticity check)
hdiagnostics <- plot(highLM, type = "diagnostics")
# pca plot
hpcplot <- plot(highLM, type = "PC", pch = 19, col = interaction(high$Water, high$Fungus))
# residuals vs fitted values (homoscedasticity check)
ldiagnostics <- plot(lowLM, type = "diagnostics")
# pca plot
lpcplot <- plot(lowLM, type = "PC", pch = 19, col = interaction(low$Water, low$Fungus))
unlink('Chlorophyll_cache', recursive = TRUE)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
library(RRPP)
library(mixOmics)
library(labdsv)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/"
O_SM_neg <- read_tsv(paste(path,"XCMS Online Results/O_SM_Neg/XCMS.annotated.Report_1394387.tsv", sep=""))
Y_SM_neg <- read_tsv(paste(path,"XCMS Online Results/Y_SM_Neg/XCMS.annotated.Report_1394397.tsv", sep=""))
# dependent variable: metabolite intensities
Y_old <- O_SM_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
Y_young <- Y_SM_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
# class: sample factors
class <- read.csv(paste(path,"XCMS Online Results/class.csv", sep=""), header = T, row.names = 1)
av_Y_old <- dplyr::aggregate(Y_old, by = class$Water, FUN = "mean", simplify = T, data = class)
av_Y_old <- aggregate(Y_old, by = class$Water, FUN = "mean", simplify = T, data = class)
## Step 9 of analysis: Non-metric Multidimensional Scaling (NMDS) analysis of metabolite profiles
library(vegan)
av_Y_old <- aggregate(Y_old, by = list(class$Water), FUN = "mean", simplify = T, data = class)
## Young Leaves
av_Y_young <- aggregate(Y_young, by = list(class$Water, class$Fungus), FUN = "mean", simplify = T, data = class)
View(av_Y_young)
av.young.splsda <- mixOmics::splsda(av_Y_young, class$Water, keepX = c(100,100))
av.young.plsda <- mixOmics::plsda(av_Y_young, class$Water)
av.young.plsda <- mixOmics::plsda(av_Y_young[,3:2566], class$Water)
?mixOmics::plsda
av.young.plsda <- mixOmics::plsda(av_Y_young[,3:2566], class$Water)
av.young.plsda <- mixOmics::plsda(av_Y_young[,3:2566], av_Y_young$Group.1) # water
av.young.plsda2 <- mixOmics::plsda(av_Y_young[,3:2566], av_Y_young$Group.2) # fungus
# heatmap
oldcim <- cim(av.young.plsda, row.names = TRUE) # by water treatment
av.old.plsda <- mixOmics::plsda(av_Y_old[,3:3735], av_Y_old$Group.1) # water
# heatmap
oldcim <- cim(old.plsda, transpose = T) # by water treatment
# heatmap
oldcim <- cim(av.old.plsda, transpose = T) # by water treatment
par(margin())
par(margin(oldcim))
# heatmap
oldcim <- cim(av.old.plsda) # by water treatment
par("mar")
par(mar=c(1,1,1,1)) # reset figure margins
# heatmap
oldcim <- cim(av.old.plsda) # by water treatment
par(mar=rep(2,4))
av.old.plsda <- mixOmics::plsda(av_Y_old[,3:3735], av_Y_old$Group.1) # water
# heatmap
oldcim <- cim(av.old.plsda) # by water treatment
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(tidyverse)
library(readr)
library(RRPP)
library(mixOmics)
library(labdsv)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/"
O_L_neg <- read_tsv(paste(path,"XCMS Online Results/O_L_Neg/XCMS.annotated.Report_1394368.tsv", sep=""))
Y_L_neg <- read_tsv(paste(path,"XCMS Online Results/Y_L_Neg/XCMS.annotated.Report_1394408.tsv", sep=""))
# dependent variable: metabolite intensities
Y_old <- O_L_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
scaled_Y_old <- scale(Y_old)
Y_young <- Y_L_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
scaled_Y_young <- scale(Y_young)
# class: sample factors
class <- read.csv(paste(path,"XCMS Online Results/class.csv", sep=""), header = T, row.names = 1)
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/"
O_SM_neg <- read_tsv(paste(path,"XCMS Online Results/O_SM_Neg/XCMS.annotated.Report_1394387.tsv", sep=""))
Y_SM_neg <- read_tsv(paste(path,"XCMS Online Results/Y_SM_Neg/XCMS.annotated.Report_1394397.tsv", sep=""))
# dependent variable: metabolite intensities
Y_old <- O_SM_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
scaled_Y_old <- scale(Y_old)
Y_young <- Y_SM_neg[,c(2,12:54)] %>% data.frame(row.names=1) %>% t %>% data.frame()
scaled_Y_young <- scale(Y_young)
# class: sample factors
class <- read.csv(paste(path,"XCMS Online Results/class.csv", sep=""), header = T, row.names = 1)
## Old Leaves
av_Y_old <- aggregate(Y_old, by = list(class$Water, class$Fungus), FUN = "mean", simplify = T, data = class)
av.old.plsda <- mixOmics::plsda(av_Y_old[,3:3735], av_Y_old$Group.1) # water
# heatmap
oldcim <- cim(av.old.plsda, title = "Old Leaf Secondary Met. (neg) Averaged Over Water", col.names = F, xlab = "Secondary Metabolites", save = 'png', name.save = "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/Secondary Metabolites Statistics/old_water_avsmneg_hm.png") # by water treatment
## Young Leaves
av_Y_young <- aggregate(Y_young, by = list(class$Water, class$Fungus), FUN = "mean", simplify = T, data = class)
av.young.plsda <- mixOmics::plsda(av_Y_young[,3:2566], av_Y_young$Group.1) # water
av.young.plsda2 <- mixOmics::plsda(av_Y_young[,3:2566], av_Y_young$Group.2) # fungus
# heatmap
youngcim <- cim(av.young.plsda, title = "Young Leaf Secondary Met. (neg) Averaged Over Water", col.names = F, xlab = "Secondary Metabolites", save = 'png', name.save = "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/Secondary Metabolites Statistics/young_water_avsmneg_hm.png") # by water treatment
# heatmap
youngcim2 <- cim(av.young.plsda2, title = "Young Leaf Secondary Met. (neg) Averaged Over Fungi", col.names = F, xlab = "Secondary Metabolites", save = 'png', name.save = "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/Secondary Metabolites Statistics/young_fungus_avsmneg_hm.png") # by fungal treatment
View(av_Y_old)
View(av_Y_young)
cite()
citation()
citation('mixOmics')
citation('RRPP')
citation('labdsv')
knitr::opts_chunk$set(echo = TRUE)
library(labdsv)
library(readr)
met <- read_tsv(paste(path, "XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis", sep = ""))
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/XCMS Online Results/Pairwise_L_Neg/"
met <- read_tsv(paste(path, "XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis", sep = ""))
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/XCMS Online Results/Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv"
met <- read_tsv(path)
View(met)
met <- read_tsv(paste(path,"XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv",sep=""))
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/XCMS Online Results/Pairwise_L_Neg/"
met <- read_tsv(paste(path,"XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv",sep=""))
met <- read_tsv(paste(path,"Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv", sep=""))
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/Kenia_Thesis_Analysis/XCMS Online Results/"
met <- read_tsv(paste(path,"Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv", sep=""))
class <- read.csv(paste(path,"class.csv",sep=""))
View(class)
# cluster by water treatment
indicator_Rain <- indval(met, clustering = class$Water, numitr = 999, type = 'long')
met <- met[,c(9,23:111)]
View(met)
met <- read_tsv(paste(path,"Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv", sep=""))
met <- met[,c(9,23:108)]
met <- read_tsv(paste(path,"Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv", sep=""))
met <- met[,c(9,23:108)] %>% data.frame(row.names=1) %>% t %>% data.frame
library(dplyr)
met <- read_tsv(paste(path,"Pairwise_L_Neg/XCMS.annotated.diffreport..Y_Field_L_Neg_Kenia_Thesis.vs.O_Field_L_Neg_Kenia_Thesis.tsv", sep=""))
met <- met[,c(9,23:108)] %>% data.frame(row.names=1) %>% t %>% data.frame
View(met)
View(class)
met <- read_tsv(path)
path <- "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/XCMS Online Results/LC-MS Samples/Old+Young/Old+Young_L_Neg/XCMS.annotated.Report_1375745.tsv"
met <- read_tsv(path)
View(met)
View(met)
met <- met[,c(2,12:97)] %>% data.frame(row.names=1) %>% t %>% data.frame
View(met)
class <- read.csv("~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/RRPP, PCA, PLSDA, Indicator Species, NMDS/Old+Young_L_Neg/class_combined.csv", header = T, row.names = 1)
View(class)
# cluster by water treatment
indicator_Rain <- indval(met, clustering = class$Rain, numitr = 999, type = 'long')
# cluster by fungal treatment
indicator_Fungus <- indval(met, clustering = class$Fungus, numitr = 999, type = 'long')
# cluster by age
indicator_Age <- indval(met, clustering = class$Age, numitr = 999, type = 'long', sort = T)
relfrqR <- indicator_Rain$relfrq # relative frequency of species in classes
relabuR <- indicator_Rain$relabu # relative abundance of species in classes
indvalR <- indicator_Rain$indval # the indicator value for each species
maxclsR <- data.frame(indicator_Rain$maxcls) # the class each species has max indicator value for
indclsR <- data.frame(indicator_Rain$indcls) # the indicator value for each species to its max class
pvalR <- data.frame(indicator_Rain$pval) # the probability of obtaining as high an indicator value as observed over the specified iterations
relfrqF <- indicator_Fungus$relfrq
relabuF <- indicator_Fungus$relabu
indvalF <- indicator_Fungus$indval
maxclsF <- data.frame(indicator_Fungus$maxcls)
indclsF <- data.frame(indicator_Fungus$indcls)
pvalF <- data.frame(indicator_Fungus$pval)
relfrqA <- indicator_Age$relfrq
relabuA <- indicator_Age$relabu
indvalA <- indicator_Age$indval
maxclsA <- data.frame(indicator_Age$maxcls)
indclsA <- data.frame(indicator_Age$indcls)
pvalA <- data.frame(indicator_Age$pval)
# export results
#write.csv(cbind(relfrqRY, relabuRY, indvalRY, maxclsRY, indclsRY, pvalRY), "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/RRPP, PCA, PLSDA, Indicator Species, NMDS/Young_S_Sub_Neg/Indicator_Analys_Rain_ysn.csv")
# export results
write.csv(cbind(relfrqR, relabuR, indvalR, maxclsR, indclsR, pvalR), "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/RRPP, PCA, PLSDA, Indicator Species, NMDS/Old+Young_L_Neg/indicator_rain_combined.csv")
write.csv(cbind(relfrqF, relabuF, indvalF, maxclsF, indclsF, pvalF), "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/RRPP, PCA, PLSDA, Indicator Species, NMDS/Old+Young_L_Neg/indicator_fungus_combined.csv")
write.csv(cbind(relfrqA, relabuA, indvalA, maxclsA, indclsA, pvalA), "~/Box/Summer 2018 TX Endo Field Samples and Analysis/Statistics/RRPP, PCA, PLSDA, Indicator Species, NMDS/Old+Young_L_Neg/indicator_age_combined.csv")
knitr::opts_chunk$set(echo = TRUE)
bugs <- read.csv("~/Downloads/bugs.csv", head = T)
plot(bugs)
fit1 <- glm(Result ~ ., data = bugs, family = binomial(link = "logit"))
summary(fit1)
summary(fit1)
fit2 <- glm(Result ~ . + Species*Tree, data = bugs, family = binomial(link = "logit"))
summary(fit2)
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
fit2 <- glm(Result ~ . -Length, data = bugs, family = binomial(link = "logit"))
summary(fit2)
fit3 <- glm(Result ~ Weight + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit"))
summary(fit3)
coef(fit3)
plot(bugs, col = bugs$Result)
pairs(bugs, col = bugs$Result)
pairs(bugs, col = bugs$Dosage)
pairs(bugs, col = bugs$Result)
pairs(bugs)
pairs(bugs, col = bugs$Result)
plot(bugs, col = bugs$Result)
?pairs
plot(bugs, col = bugs$Result, pch = 19)
plot(bugs, col = bugs$Result, pch = 19, par(bg = "red"))
plot(bugs, col = bugs$Result, pch = 19, par(col = "red"))
plot(bugs, col = c("red",bugs$Result), pch = 19)
plot(bugs, col = c(bugs$Result), pch = 19)
plot(bugs, col = bugs$Result, pch = 19)
plot(bugs, col = bugs$Result, pch = 19, col = "red")
plot(bugs, col = bugs$Result, pch = 19, fill="red")
plot(bugs, col = bugs$Result, pch = 19, fill="blue")
plot(bugs, col = bugs$Result, pch = 19, fill=c("blue", "red"))
plot(bugs, col = bugs$Result, pch = 19, par(fill=c("blue", "red")))
plot(bugs, col = bugs$Result, pch = 19)
plot(bugs, col = bugs$Result, pch = 19, rainbow(2))
plot(bugs, col = bugs$Result, pch = 19)
summary(bugs)
bugs <- read.csv("~/Downloads/bugs.csv", head = T)
summary(bugs)
plot(bugs, col = bugs$Result, pch = 19)
fit2 <- glm(Result ~ . -Weight, data = bugs, family = binomial(link = "logit"))
anova(fit1,fit2)
anova(fit1,fit3)
anova(fit2,fit3)
fit3 <- glm(Result ~ Dosage + Species*Tree, data = bugs, family = binomial(link = "logit"))
fit3 <- glm(Result ~ Species*Tree, data = bugs, family = binomial(link = "logit"))
summary(fit3)
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
bugs <- read.csv("~/Downloads/bugs.csv", head = T)
summary(bugs)
plot(bugs, col = bugs$Result, pch = 19)
fit1 <- glm(Result ~ ., data = bugs, family = binomial(link = "logit"))
summary(fit1)
fit2 <- glm(Result ~ . -Weight, data = bugs, family = binomial(link = "logit"))
summary(fit2)
fit3 <- glm(Result ~ Weight + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit"))
summary(fit3)
plot(fit3)
bugs[79,]
bugs[119,]
# outlier: native lived on a pear tree
# actual: native species should die on pear tree when treated
predict(fit3, data.frame(Species=="Other"), Weight = 20)
predict(fit3, data.frame(Species=="Other"), Weight = 20, data = bugs)
predict(fit3, data.frame(bugsSpecies = "Other", Weight = 20))
predict(fit3, data.frame(Species = "Other", Weight = 20))
predict(fit3, data.frame(Dosage, Weight = 20))
fit3 <- glm(Result ~ Weight + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
predict(fit3, data.frame(Dosage, Weight = 20))
predict(fit3, data.frame(Tree, Weight = 20))
predict(fit3, data.frame(Tree = Pear, Weight = 20))
predict(fit3, Weight = 20)
predict(fit3, data.frame(Tree="Pear", Weight = 20))
predict(fit3)
predict(fit3, Tree="Pear")
predict(fit3, data.frame(Tree="Pear",weight=20))
predict(fit3, weight=20)
predict(fit3, weight=20)[Species=="Other,"]
predict(fit3, weight=20)[Species=="Other",]
data.frame(predict(fit3, weight=20))[Species=="Other",]
predict(fit3, newdata = data.frame(Species="Other",weight=20))
predict(fit3, newdata = data.frame(Species="Other",Weight=20))
predict(fit3, newdata = data.frame(Species="Other",Weight=20, Dosage))
predict(fit3, newdata = data.frame(bugs$Species="Other",bugs$Weight=20, bugs$Dosage))
predict(fit3, newdata = data.frame(Weight=20))
predict(fit3, Weight=20)
summary(predict(fit3, Weight=20))
predict(fit3, Weight=20)
View(bugs)
library(dplyr)
predict(fit3, Weight=20) %>% group_by(bugs$Species) %>% summarize(mean)
predict(fit3, Weight=20) %>% group_by(bugs$Species) %>% summarize()
predict(fit3, Weight=20)
predict(fit3, data.frame(Species="Native",Weight=20))
fit3 <- glm(Result ~ Weight + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit3 <- glm(Result ~ Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
predict(fit3, data.frame(Species="Native",Weight=20))
predict(fit3, Species="Native")
predict(fit3, Weight=20)
predict(fit3, Weight=20) %>% summarize_at(1:100, mean)
predict(fit3, Weight=20) %>% summarize_at(1:100, mean())
predict(fit3, Weight=20) %>% typeof()
predict(fit3, Weight=20) %>% data.frame() %>% typeof()
predict(fit3, Weight=20) %>% data.frame() %>% summarize_at(1:100, mean)
predict(fit3, Weight=20) %>% data.frame() %>% summary
predict(fit3, Weight=20) %>% data.frame() %>% summary(1:100)
predict(fit3, Weight=20) %>% data.frame() %>% summary(200:300)
predict(fit3, bugs[Weight==20,])
predict(fit3, bugs[bugs$Weight==20,])
predict(fit3, bugs[bugs$Weight==20])
predict(fit3, bugs[,bugs$Weight==20])
predict(fit3, bugs[bugs$Weight==20,])
predict(fit3, bugs[c(bugs$Weight==20, Species=="Native"),])
predict(fit3, bugs[c(bugs$Weight==20, bugs$Species=="Native"),])
predict(fit3, bugs[bugs$Species=="Native",])
predict(fit3, bugs[bugs$Weight==20,])
fit3 <- glm(Result ~ Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
confint(fit3)
confint(fit3, 0.5)
#LD50 dosage makes logit equal to zero
predict(fit3, data.frame(Tree="Apple", Weight=20, Dosage=10))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=10))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=30))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=28))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.5))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.4))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.35))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.325))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.335))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.333))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.334))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3333))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.333))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.33))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.32))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.321))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3212))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3213))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3214))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3215))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3217))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3219))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.329))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.327))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.328))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.3274))
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.33))
fit3 <- glm(Result ~ Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit2 <- glm(Result ~ . - Length, data = bugs, family = binomial(link = "logit"))
summary(fit2)
fit3 <- glm(Result ~ . - Length + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
bugs[79,]
2.70935+(0.92617)+(-0.45255*20)+(0.197*27)
2.70935+(0.92617)+(-0.45255*20)+(0.197*27.33)
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.33))
fit3 <- glm(Result ~ . - Length + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
predict(fit3, data.frame(Tree="Apple", Species="Other",Weight=20, Dosage=27.33))
fit3 <- glm(Result ~ Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit3 <- glm(Result ~ . -Length + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit3 <- glm(Result ~ Weight + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit3 <- glm(Result ~ . -Length + Dosage + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
fit3 <- glm(Result ~ . -Length + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage=27.33))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 10, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.33, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.5, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.4, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.45, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.48, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Native", Weight=20, Dosage = 27.49, Length = 10))
exp(3.435117e-05 )
log(3.435117e-05)
exp(3.435117e-05)
predict(fit3, data.frame(Tree="Apple", Species="Native", Weight=20, Dosage = 37.49, Length = 10))
predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
# how does the selected dosage affect the native species?
predict(fit3, data.frame(Tree="Apple", Species="Native", Weight=20, Dosage = 27.49, Length = 10))
# odds that other dies
exp(3.435117e-05)
# odds that native lives
exp(-0.92614)
# odds that other dies
exp(3.435117e-05)
1.000034/(1-1.000034)
3.435117e-05/(1-3.435117e-05)
1.000034/(1+1.000034)
# probability function
p <- function(odds){odds/odds+1}
logodds <- predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10)) # log odds
p(logodds)
logodds <- predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10)) # log odds
p(exp(logodds))
# probability function
p <- function(odds){odds/odds+1}
logodds <- predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
p(exp(logodds))
# probability function
p <- function(odds){odds/(odds+1)}
p(exp(logodds))
# how does the selected dosage affect the native species?
logodds2 <- predict(fit3, data.frame(Tree="Apple", Species="Native", Weight=20, Dosage = 27.49, Length = 10))
p(exp(logodds2))
# odds ratio
exp(logodds)/exp(logodds2)
# odds ratio
p(exp(logodds)/exp(logodds2))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
p(logodds3)
p(exp(logodds3))
# odds ratio
p(exp(logodds)/exp(logodds2))
# odds ratio
exp(logodds)/exp(logodds2)
library(dplyr)
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
bugs <- read.csv("~/Downloads/bugs.csv", head = T)
summary(bugs)
plot(bugs, col = bugs$Result, pch = 19)
fit1 <- glm(Result ~ ., data = bugs, family = binomial(link = "logit"))
summary(fit1)
fit2 <- glm(Result ~ . - Length, data = bugs, family = binomial(link = "logit"))
summary(fit2)
fit3 <- glm(Result ~ . -Length + Species*Tree, data = bugs, family = binomial(link = "logit")) ; summary(fit3)
# probability function
p <- function(odds){odds/(odds+1)}
# how does the dosage affect the other species?
logodds <- predict(fit3, data.frame(Tree="Apple", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
p(exp(logodds))
# how does the selected dosage affect the native species?
logodds2 <- predict(fit3, data.frame(Tree="Apple", Species="Native", Weight=20, Dosage = 27.49, Length = 10))
p(exp(logodds2))
# odds ratio
exp(logodds)/exp(logodds2)
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 40, Length = 10))
p(exp(logodds3))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 30, Length = 10))
p(exp(logodds3))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 30\7, Length = 10))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 37, Length = 10))
p(exp(logodds3))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Native", Weight=20, Dosage = 37, Length = 10))
p(exp(logodds3))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 27.49, Length = 10))
p(exp(logodds3))
p(exp(predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 27.49, Length = 10)))
p(exp(predict(fit3, data.frame(Tree="Pear", Species="Native", Weight=20, Dosage = 27.49, Length = 10)))
p(exp(predict(fit3, data.frame(Tree="Pear", Species="Native", Weight=20, Dosage = 27.49, Length = 10))))
logodds3 <- predict(fit3, data.frame(Tree="Pear", Species="Other", Weight=20, Dosage = 17.49, Length = 10))
p(exp(logodds3)) # invasive species
install.packages("knitr")
install.packages("tidyverse")
install.packages("lmtest")
install.packages('sandwich')
install.packages("glmnet")
install.packages("plotROC")
blogdown::serve_site()
install.packages("blogdown")
getwd()
setwd("~/Website/")
getwd()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
